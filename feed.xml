<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://alshedivat.github.io/Wikiweb/feed.xml" rel="self" type="application/atom+xml" /><link href="https://alshedivat.github.io/Wikiweb/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-07-19T16:16:19+00:00</updated><id>https://alshedivat.github.io/Wikiweb/feed.xml</id><title type="html">blank</title><subtitle>website, portfolio, blog, akademi, jekyll, jekyll-theme
</subtitle><entry><title type="html">Algoritma KMP Knuth-Morris-Pratt</title><link href="https://alshedivat.github.io/Wikiweb/blog/2022/news/" rel="alternate" type="text/html" title="Algoritma KMP Knuth-Morris-Pratt" /><published>2022-03-20T16:40:16+00:00</published><updated>2022-03-20T16:40:16+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2022/news</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2022/news/"><![CDATA[<hr />
<p><code class="language-plaintext highlighter-rouge">Algoritma KMP (Knuth-Morris-Pratt)</code> adalah alogritma pencarian string, dikembangkan secara terpisah oleh <a href="https://id.wikipedia.org/wiki/Donald_Knuth"><code class="language-plaintext highlighter-rouge">Donald E. Khuth</code></a> pada tahun 1967 dan <code class="language-plaintext highlighter-rouge">James H. Morris</code> bersama <code class="language-plaintext highlighter-rouge">Vaughan R. Pratt</code> pada tahun 1966, tetapi keduanya mempublikasikanya secara bersamaan pada tahun 1977. Jika melihat <a href="announcement_1.md">Algoritma Brute force</a> lebih mendalam, kita tau bawha dengan mengingat beberapa perbandingan yang dilakukan sebelumnya kita dapat meningkatkan besar pergeseran yang dilakukan. Hal ini akan menghemata perbandingan, yang selanjutnya akan meningkatkan kecepatan pencarian.</p>

<hr />
<h5 id="cara-kerja">Cara kerja</h5>
<p>Perhitungan penggeseran pada algoritma ini adalah sebagai berikut, bila terjadi ketidakcocokan pada saat pattern sejajar <code class="language-plaintext highlighter-rouge">[i..i + n - 1]</code>, kita bisa menganggap ketidakcocokan pertama terjadi diantara teks <code class="language-plaintext highlighter-rouge">[i + j]</code> dan pattern <code class="language-plaintext highlighter-rouge">[j]</code> dengan <code class="language-plaintext highlighter-rouge">0 &lt; j &lt; n</code>. Berarti, teks <code class="language-plaintext highlighter-rouge">[i..i + n - 1]</code> = pattern <code class="language-plaintext highlighter-rouge">[0.. j - 1]</code> dan a = teks <code class="language-plaintext highlighter-rouge">[ i + j]</code> tidak sama dengan b = pattern <code class="language-plaintext highlighter-rouge">[j]</code>. Ketika kita menggeser, sangat beralasan bila ada awalan sebuah <code class="language-plaintext highlighter-rouge">v</code> dari pattern yang akan sama sebagian akhiran <code class="language-plaintext highlighter-rouge">u</code> dari sebagian teks. Sehingga kita bisa menggeser pattern agar awalan <code class="language-plaintext highlighter-rouge">v</code> tersebut sejajar dengan akhiran <code class="language-plaintext highlighter-rouge">u</code>.<br /> <br />
Dengan kata lain, pencocokan string akan berjalan secara efisien bila kita mempunyai table yang menentukan berapa panjang kita seharusnya menggeser seandainya terdeteksi ketidakcocokan di karakter <code class="language-plaintext highlighter-rouge">ke-j</code> dari pattern. Table itu harus memuat <code class="language-plaintext highlighter-rouge">teks[j]</code> yang merupakan posisi karakter <code class="language-plaintext highlighter-rouge">pattern[j]</code> setelah digeser, sehingga kita bisa menggeser pattern sebesar <code class="language-plaintext highlighter-rouge">j-next[j]</code> relatif tehadap teks secara sistematis.<br /> 
Langkah-langkah yang dilakukan algoritma <code class="language-plaintext highlighter-rouge">Knuth-Morris-Pratt</code> pada saat pencocokan string:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Algorima Knuth-Morris-Pratt</code> mulai mencocokan pattern pada awal teks.</li>
  <li>Dari kiri ke kanan, algoritma ini mencocokan karakter per karakter pattern dengan karakter di teks yang bersesuaian, sampai salah satu kondisi berikut terpenuhi:
    <ul>
      <li>karakter di pattern dan di teks yang di bandingkan tidak cocok (mismatch).</li>
      <li>semua karakter di pattern cocok, kemudian algoritam akan memberitahukan penemuan di posisi ini.</li>
    </ul>
  </li>
  <li>Alogtima kemudian menggeser pattern berdasarkan table next, lalu mengulangi langkah kedua sampai berada di ujung teks</li>
</ul>

<hr />
<h5 id="syntax-kmp">Syntax KMP</h5>
<p>Berikut adalah pseudocode algoritme KMP pada fase pra-pencarian:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rocedure</span> <span class="n">preKMP</span><span class="p">(</span>
    <span class="nb">input</span> <span class="n">P</span><span class="p">:</span> <span class="n">array</span><span class="p">[</span><span class="mf">0.</span><span class="p">.</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="n">of</span> <span class="n">char</span><span class="p">,</span>
    <span class="nb">input</span> <span class="n">n</span><span class="p">:</span> <span class="n">integer</span><span class="p">,</span>
    <span class="nb">input</span><span class="o">/</span><span class="n">output</span> <span class="n">kmpNext</span><span class="p">:</span> <span class="n">array</span><span class="p">[</span><span class="mf">0.</span><span class="p">.</span><span class="n">n</span><span class="p">]</span> <span class="n">of</span> <span class="n">integer</span>
<span class="p">)</span>
<span class="n">Deklarasi</span><span class="p">:</span>
<span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">:</span> <span class="n">integer</span>

<span class="n">Algoritme</span>
  <span class="n">i</span><span class="p">:</span><span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">j</span><span class="p">:</span><span class="o">=</span> <span class="n">kmpNext</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span><span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
     <span class="k">while</span> <span class="p">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span> <span class="ow">and</span> <span class="ow">not</span><span class="p">(</span><span class="n">P</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">P</span><span class="p">[</span><span class="n">j</span><span class="p">]))</span>
        <span class="n">j</span><span class="p">:</span><span class="o">=</span> <span class="n">kmpNext</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
     <span class="n">i</span><span class="p">:</span><span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
     <span class="n">j</span><span class="p">:</span><span class="o">=</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
     <span class="k">if</span> <span class="p">(</span><span class="n">P</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">P</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
        <span class="n">kmpNext</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="o">=</span> <span class="n">kmpNext</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
     <span class="k">else</span>
        <span class="n">kmpNext</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="o">=</span> <span class="n">j</span><span class="p">;</span>
     <span class="n">endif</span>
  <span class="n">endwhile</span>
</code></pre></div></div>
<p>Dan berikut adalah pseudocode algoritme KMP pada fase pencarian:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">procedure</span> <span class="n">KMPSearch</span><span class="p">(</span>
    <span class="nb">input</span> <span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">:</span> <span class="n">integer</span><span class="p">,</span>
    <span class="nb">input</span> <span class="n">P</span><span class="p">:</span> <span class="n">array</span><span class="p">[</span><span class="mf">0.</span><span class="p">.</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="n">of</span> <span class="n">char</span><span class="p">,</span>
    <span class="nb">input</span> <span class="n">T</span><span class="p">:</span> <span class="n">array</span><span class="p">[</span><span class="mf">0.</span><span class="p">.</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="n">of</span> <span class="n">char</span><span class="p">,</span>
    <span class="n">output</span> <span class="n">ketemu</span><span class="p">:</span> <span class="n">array</span><span class="p">[</span><span class="mf">0.</span><span class="p">.</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="n">of</span> <span class="n">boolean</span>
<span class="p">)</span>

<span class="n">Deklarasi</span><span class="p">:</span>
<span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span><span class="nb">next</span><span class="p">:</span> <span class="n">integer</span> 
<span class="n">kmpNext</span><span class="p">:</span> <span class="n">array</span><span class="p">[</span><span class="mf">0.</span><span class="p">.</span><span class="n">n</span><span class="p">]</span> <span class="n">of</span> <span class="n">interger</span>

<span class="n">Algoritme</span><span class="p">:</span>
<span class="n">preKMP</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">P</span><span class="p">,</span> <span class="n">kmpNext</span><span class="p">)</span> 
<span class="n">i</span><span class="p">:</span><span class="o">=</span><span class="mi">0</span>
<span class="k">while</span> <span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span> <span class="n">m</span><span class="o">-</span><span class="n">n</span><span class="p">)</span> <span class="n">do</span>
    <span class="n">j</span><span class="p">:</span><span class="o">=</span><span class="mi">0</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="ow">and</span> <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">P</span><span class="p">[</span><span class="n">j</span><span class="p">])</span> <span class="n">do</span> 
       <span class="n">j</span><span class="p">:</span><span class="o">=</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span>
    <span class="n">endwhile</span>
    <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="p">)</span> <span class="n">then</span>
       <span class="n">ketemu</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span><span class="o">=</span><span class="n">true</span><span class="p">;</span>
    <span class="n">endif</span>
    <span class="nb">next</span><span class="p">:</span><span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">kmpNext</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
    <span class="n">i</span><span class="p">:</span><span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="nb">next</span>
<span class="n">endwhile</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Python" /><category term="formatting" /><category term="links" /><summary type="html"><![CDATA[Algoritma pemrograman python]]></summary></entry><entry><title type="html">Pendahuluan Python</title><link href="https://alshedivat.github.io/Wikiweb/blog/2022/python/" rel="alternate" type="text/html" title="Pendahuluan Python" /><published>2022-02-10T16:40:16+00:00</published><updated>2022-02-10T16:40:16+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2022/python</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2022/python/"><![CDATA[<hr />

<p><code class="language-plaintext highlighter-rouge">Python</code> adalah bahasa pemrograman tingkt tinggi yang interpretatif multiguna. Tidak seperti bahasa pemrograman yang lain nya yang susah untuk dibaca dan dipahami, <code class="language-plaintext highlighter-rouge">Python</code> lebih menekankan keterbacaan kode agar lebih mudah untuk memahami syntax. Hal ini membuat Python begitu populer karena sangat mudah dipelajari baik bagi pemula ataupun yang sebelumnya sudah belajar bahasa pemrograman lain.</p>

<p><code class="language-plaintext highlighter-rouge">Python</code> dibuat pada akhir tahun 1980-an oleh <a href="https://id.wikipedia.org/wiki/Guido_van_Rossum">Guido Van Rossum</a> di <a href="https://id.wikipedia.org/wiki/Centrum_Wiskunde_%26_Informatica">Centrum Wiskunde &amp; Informatica CWI</a> di belanda sebagai penerus bahasa ABC sendiri terinspirasi oleh <a href="https://id.wikipedia.org/wiki/SETL">STEL</a> mampu <a href="https://id.wikipedia.org/wiki/Penanganan_pengecualian">menangai pengecualian</a> dan berinteraksi dengan sistem operasi <a href="">amoeba</a>Sampai saat ini <code class="language-plaintext highlighter-rouge">Python</code> masih dikembangkan oleh <code class="language-plaintext highlighter-rouge">Python Software Foundation</code>, dan hampir mendukung hampir semua <a href="https://id.wikipedia.org/wiki/Sistem_operasi">sistem operasi</a> bahkan untuk sistem oprasi <a href="https://id.wikipedia.org/wiki/Linux"><code class="language-plaintext highlighter-rouge">linux</code></a>, hampir semua distronya sudah menyertakan python didalamnya.</p>

<p>Untuk menghasilakan output ke layar cukup mudah sekali berbeda dengan bahasa pemrograman lain
hanya menuliskan kode <code class="language-plaintext highlighter-rouge">print</code>, anda sudah bisa mencetak apapun yang anda inginkan didalam tanga kurung <code class="language-plaintext highlighter-rouge">()</code>. dibagian akhir kode pun tidak harus memberikan tanda semicolin <code class="language-plaintext highlighter-rouge">;</code></p>

<p>misalnya:</p>
<ul>
  <li>Java
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">coba</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"untuk outuput"</span><span class="o">)</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>kalau untuk Python, begitu cukup mudah
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"Hello World!"</span><span class="p">)</span>
</code></pre></div>    </div>
    <p>dengan Pyhton bisa dengan sesimpel ini hanya cukup menulisan print dan di isi dengan tanda kurung dan petik dan di isi dengan output saja sudah bisa menghasilkan outputnya</p>
  </li>
</ul>]]></content><author><name></name></author><category term="Python" /><category term="formatting" /><category term="links" /><summary type="html"><![CDATA[Pendahuluan Python]]></summary></entry><entry><title type="html">Pendahuluan Java</title><link href="https://alshedivat.github.io/Wikiweb/blog/2022/Java_1/" rel="alternate" type="text/html" title="Pendahuluan Java" /><published>2022-02-10T16:40:16+00:00</published><updated>2022-02-10T16:40:16+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2022/Java_1</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2022/Java_1/"><![CDATA[<hr />

<p><code class="language-plaintext highlighter-rouge">Java</code> adalah bahasa pemrograman tingkat tinggi yang bisa di jalankan <a href="https://id.wikipedia.org/wiki/Komputer">komputer</a> termasuk di <a href="https://id.wikipedia.org/wiki/Telepon_genggam">telepon gemgam</a>. Bahasa ini awalnya dibuat oleh <a href="https://id.wikipedia.org/wiki/James_Gosling">James Gosling</a> saat masih bergabung <a href="https://id.wikipedia.org/wiki/Sun_Microsystems"><em>sun microsystems</em></a> yang saat ini merupakan bagian dari <a href="https://id.wikipedia.org/wiki/Oracle">oracle</a> dan dirilis tahun 1995. Bahasa ini banyak mengadopsi sintaxis yang terdapat dari <a href="https://id.wikipedia.org/wiki/C%2B%2B">C</a> dan <a href="https://id.wikipedia.org/wiki/C%2B%2B">C++</a> namun dengan sintaxis model objek yang lebih sederhana apliksi-apliksi java umumnya dicompilsi kedalam <a href="https://id.wikipedia.org/wiki/P-Code">p-code</a> <em>bytecode</em> dan dapat dijalankan di berbagai pada mesin <a href="https://id.wikipedia.org/wiki/Mesin_Virtual_Java">Mesin Virtual Java JVM</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.Tutorial</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span><span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello World!"</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Java" /><category term="pemula" /><summary type="html"><![CDATA[Pendahuluan Java]]></summary></entry><entry><title type="html">Instalasi Python dan vscode di linux ubuntu</title><link href="https://alshedivat.github.io/Wikiweb/blog/2022/python2/" rel="alternate" type="text/html" title="Instalasi Python dan vscode di linux ubuntu" /><published>2022-02-10T16:40:16+00:00</published><updated>2022-02-10T16:40:16+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2022/python2</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2022/python2/"><![CDATA[<hr />

<p><code class="language-plaintext highlighter-rouge">vscode</code> adalah text editor penyunting kode sumber buatan <a href="https://www.microsoft.com/id-id">Microsoft</a> untuk Linux, MacOS, dan Windows. Dalam tutorial ini
saya menggunakan Python3 untuk menampilkan <code class="language-plaintext highlighter-rouge">Hello World!</code> yang paling sederhana yaitu menggunakan ektensi python <code class="language-plaintext highlighter-rouge">.py</code> dan di tutorial ini juga akan menjadikan vscode lakayknya<a href="https://id.wikipedia.org/wiki/Lingkungan_pengembangan_terpadu#:~:text=IDE%20(Integrated%20Development%20Environment)%20adalah,diperlukan%20dalam%20membangun%20perangkat%20lunak."><code class="language-plaintext highlighter-rouge">IDE</code></a> Python yang ringan dan power full</p>

<h4 id="instalasi-python">Instalasi Python</h4>

<ul>
  <li>
    Jika anda belum mempunyai Python disarankan untuk mendownload terlebih dahulu. Lalu pilih sesuai dengan <i>System operasi</i> yang ada gunakan di sini saya menggunakan linux tapi biasa nya kalau menggunakan system operasi 
    linux untuk python nya sudah di sertakan tapi kalau anda mau menggunakan versi terbarunya anda bisa mengunjungi dari situm resminya
  </li>
    <div class="row mt-3">
        <div class="col-sm mt-3 mt-md-0">
            <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/Wikiweb/assets/img/python_download-480.webp" />
    <source media="(max-width: 800px)" srcset="/Wikiweb/assets/img/python_download-800.webp" />
    <source media="(max-width: 1400px)" srcset="/Wikiweb/assets/img/python_download-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/Wikiweb/assets/img/python_download.png" />

  </picture>

</figure>

        </div>
    </div>
</ul>

<h4 id="instalasi-vscode-melalui-repository">Instalasi vscode melalui repository</h4>

<p>Menambahakan repository resmi dari vscode dan sebelum melakukan instalasi, tambahkan repository dengan menggunakan printah:</p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt<span class="p">-</span><span class="nb">get</span> <span class="k">update</span>
sudo apt install software<span class="p">-</span>properties<span class="p">-</span>common apt<span class="p">-</span>transport<span class="p">-</span>https wget
</code></pre></div></div>

<p>Lakukan printah dibawah ini untuk menambahkan repository vscode dari <code class="language-plaintext highlighter-rouge">Microsoft</code> ke linux ubuntu</p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="p">-</span><span class="k">q</span> https<span class="p">:</span><span class="sr">//</span>packages<span class="p">.</span>microsoft<span class="p">.</span><span class="k">com</span><span class="sr">/keys/</span>microsoft<span class="p">.</span>asc <span class="p">-</span>O<span class="p">-</span> <span class="p">|</span> sudo apt<span class="p">-</span><span class="nb">key</span> <span class="nb">add</span> <span class="p">-</span>
sudo <span class="nb">add</span><span class="p">-</span>apt<span class="p">-</span>repository <span class="s2">"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"</span>
</code></pre></div></div>

<p>berikut nya jalankan printah untuk menginstall vscode di system operasi linux ubuntu anda</p>

<div class="language-vim highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install code
</code></pre></div></div>]]></content><author><name></name></author><category term="Python" /><category term="formatting" /><category term="links" /><summary type="html"><![CDATA[Pyhton dasar]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://alshedivat.github.io/Wikiweb/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams" /><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2021/diagrams</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin.
Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p>

<p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine.
Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW.
For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p>

<h2 id="mermaid">Mermaid</h2>

<p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div>

<p>The diagram below was generated by the following code:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div>

<div class="jekyll-diagrams diagrams mermaid">
  <svg id="mermaid-1658247400292" width="100%" xmlns="http://www.w3.org/2000/svg" height="100%" style="max-width:450px;" viewBox="-50 -10 450 231"><style>#mermaid-1658247400292 .label{font-family:trebuchet ms,verdana,arial;color:#333}#mermaid-1658247400292 .node circle,#mermaid-1658247400292 .node ellipse,#mermaid-1658247400292 .node polygon,#mermaid-1658247400292 .node rect{fill:#ececff;stroke:#9370db;stroke-width:1px}#mermaid-1658247400292 .node.clickable{cursor:pointer}#mermaid-1658247400292 .arrowheadPath{fill:#333}#mermaid-1658247400292 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1658247400292 .edgeLabel{background-color:#e8e8e8}#mermaid-1658247400292 .cluster rect{fill:#ffffde!important;stroke:#aa3!important;stroke-width:1px!important}#mermaid-1658247400292 .cluster text{fill:#333}#mermaid-1658247400292 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:trebuchet ms,verdana,arial;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1658247400292 .actor{stroke:#ccf;fill:#ececff}#mermaid-1658247400292 text.actor{fill:#000;stroke:none}#mermaid-1658247400292 .actor-line{stroke:grey}#mermaid-1658247400292 .messageLine0{marker-end:"url(#arrowhead)"}#mermaid-1658247400292 .messageLine0,#mermaid-1658247400292 .messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#mermaid-1658247400292 #arrowhead{fill:#333}#mermaid-1658247400292 #crosshead path{fill:#333!important;stroke:#333!important}#mermaid-1658247400292 .messageText{fill:#333;stroke:none}#mermaid-1658247400292 .labelBox{stroke:#ccf;fill:#ececff}#mermaid-1658247400292 .labelText,#mermaid-1658247400292 .loopText{fill:#000;stroke:none}#mermaid-1658247400292 .loopLine{stroke-width:2;stroke-dasharray:"2 2";marker-end:"url(#arrowhead)";stroke:#ccf}#mermaid-1658247400292 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1658247400292 .noteText{fill:#000;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:14px}#mermaid-1658247400292 .section{stroke:none;opacity:.2}#mermaid-1658247400292 .section0{fill:rgba(102,102,255,.49)}#mermaid-1658247400292 .section2{fill:#fff400}#mermaid-1658247400292 .section1,#mermaid-1658247400292 .section3{fill:#fff;opacity:.2}#mermaid-1658247400292 .sectionTitle0,#mermaid-1658247400292 .sectionTitle1,#mermaid-1658247400292 .sectionTitle2,#mermaid-1658247400292 .sectionTitle3{fill:#333}#mermaid-1658247400292 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px}#mermaid-1658247400292 .grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}#mermaid-1658247400292 .grid path{stroke-width:0}#mermaid-1658247400292 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1658247400292 .task{stroke-width:2}#mermaid-1658247400292 .taskText{text-anchor:middle;font-size:11px}#mermaid-1658247400292 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}#mermaid-1658247400292 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1658247400292 .taskText0,#mermaid-1658247400292 .taskText1,#mermaid-1658247400292 .taskText2,#mermaid-1658247400292 .taskText3{fill:#fff}#mermaid-1658247400292 .task0,#mermaid-1658247400292 .task1,#mermaid-1658247400292 .task2,#mermaid-1658247400292 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1658247400292 .taskTextOutside0,#mermaid-1658247400292 .taskTextOutside1,#mermaid-1658247400292 .taskTextOutside2,#mermaid-1658247400292 .taskTextOutside3{fill:#000}#mermaid-1658247400292 .active0,#mermaid-1658247400292 .active1,#mermaid-1658247400292 .active2,#mermaid-1658247400292 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1658247400292 .activeText0,#mermaid-1658247400292 .activeText1,#mermaid-1658247400292 .activeText2,#mermaid-1658247400292 .activeText3{fill:#000!important}#mermaid-1658247400292 .done0,#mermaid-1658247400292 .done1,#mermaid-1658247400292 .done2,#mermaid-1658247400292 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1658247400292 .doneText0,#mermaid-1658247400292 .doneText1,#mermaid-1658247400292 .doneText2,#mermaid-1658247400292 .doneText3{fill:#000!important}#mermaid-1658247400292 .crit0,#mermaid-1658247400292 .crit1,#mermaid-1658247400292 .crit2,#mermaid-1658247400292 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1658247400292 .activeCrit0,#mermaid-1658247400292 .activeCrit1,#mermaid-1658247400292 .activeCrit2,#mermaid-1658247400292 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1658247400292 .doneCrit0,#mermaid-1658247400292 .doneCrit1,#mermaid-1658247400292 .doneCrit2,#mermaid-1658247400292 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1658247400292 .activeCritText0,#mermaid-1658247400292 .activeCritText1,#mermaid-1658247400292 .activeCritText2,#mermaid-1658247400292 .activeCritText3,#mermaid-1658247400292 .doneCritText0,#mermaid-1658247400292 .doneCritText1,#mermaid-1658247400292 .doneCritText2,#mermaid-1658247400292 .doneCritText3{fill:#000!important}#mermaid-1658247400292 .titleText{text-anchor:middle;font-size:18px;fill:#000}#mermaid-1658247400292 g.classGroup text{fill:#9370db;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:10px}#mermaid-1658247400292 g.classGroup rect{fill:#ececff;stroke:#9370db}#mermaid-1658247400292 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1658247400292 .classLabel .box{stroke:none;stroke-width:0;fill:#ececff;opacity:.5}#mermaid-1658247400292 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1658247400292 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1658247400292 #compositionEnd,#mermaid-1658247400292 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1658247400292 #aggregationEnd,#mermaid-1658247400292 #aggregationStart{fill:#ececff;stroke:#9370db;stroke-width:1}#mermaid-1658247400292 #dependencyEnd,#mermaid-1658247400292 #dependencyStart,#mermaid-1658247400292 #extensionEnd,#mermaid-1658247400292 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1658247400292 .branch-label,#mermaid-1658247400292 .commit-id,#mermaid-1658247400292 .commit-msg{fill:#d3d3d3;color:#d3d3d3}</style><style>#mermaid-1658247400292 {
    color: rgb(0, 0, 0);
    font: normal normal 400 normal 16px / normal "Times New Roman";
  }</style><g></g><g><line id="actor0" x1="75" y1="5" x2="75" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="0" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><line id="actor1" x1="275" y1="5" x2="275" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="200" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g><defs><marker id="arrowhead" refX="5" refY="2" markerWidth="6" markerHeight="4" orient="auto"><path d="M 0,0 V 4 L6,2 Z"></path></marker></defs><defs><marker id="crosshead" markerWidth="15" markerHeight="8" orient="auto" refX="16" refY="4"><path fill="black" stroke="#000000" stroke-width="1px" d="M 9,2 V 6 L16,4 Z" style="stroke-dasharray: 0, 0;"></path><path fill="none" stroke="#000000" stroke-width="1px" d="M 0,1 L 6,7 M 6,1 L 0,7" style="stroke-dasharray: 0, 0;"></path></marker></defs><g><text x="175" y="93" class="messageText" style="text-anchor: middle;">Hello John, how are you?</text><line x1="275" y1="100" x2="75" y2="100" class="messageLine0" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="fill: none;"></line></g><g><text x="175" y="128" class="messageText" style="text-anchor: middle;">Great!</text><line x1="75" y1="135" x2="275" y2="135" class="messageLine1" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="stroke-dasharray: 3, 3; fill: none;"></line></g><g><rect x="0" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><rect x="200" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g></svg>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a post with redirect</title><link href="https://alshedivat.github.io/Wikiweb/blog/2021/redirect/" rel="alternate" type="text/html" title="a post with redirect" /><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2021/redirect</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2021/redirect/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[you can also redirect to assets like pdf]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://alshedivat.github.io/Wikiweb/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post" /><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2021/distill</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2021/distill/"><![CDATA[<p><strong>NOTE:</strong>
Citations, footnotes, and code blocks do not display correctly in the dark mode since distill does not support the dark mode by default.
If you are interested in correctly adding dark mode support for distill, please open <a href="https://github.com/alshedivat/al-folio/discussions">a discussion</a> and let us know.</p>

<h2 id="equations">Equations</h2>

<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine.
You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>.
If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph.
Here is an example:</p>

\[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\]

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>

<hr />

<h2 id="citations">Citations</h2>

<p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag.
The key attribute is a reference to the id provided in the bibliography.
The key attribute can take multiple ids, separated by commas.</p>

<p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover).
If you have an appendix, a bibliography is automatically created and populated in it.</p>

<p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover.
However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p>

<hr />

<h2 id="footnotes">Footnotes</h2>

<p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag.
The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p>

<hr />

<h2 id="code-blocks">Code Blocks</h2>

<p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags.
An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>.
For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p>

<d-code block="" language="javascript">
  var x = 25;
  function(x) {
    return x * x;
  }
</d-code>

<p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look well in the dark mode.
You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="layouts">Layouts</h2>

<p>The main text column is referred to as the body.
It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p>

<div class="fake-img l-body">
  <p>.l-body</p>
</div>

<p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p>

<div class="fake-img l-page">
  <p>.l-page</p>
</div>

<p>All of these have an outset variant if you want to poke out from the body text a little bit.
For instance:</p>

<div class="fake-img l-body-outset">
  <p>.l-body-outset</p>
</div>

<div class="fake-img l-page-outset">
  <p>.l-page-outset</p>
</div>

<p>Occasionally you’ll want to use the full browser width.
For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>.
You can also inset the element a little from the edge of the browser by using the inset variant.</p>

<div class="fake-img l-screen">
  <p>.l-screen</p>
</div>
<div class="fake-img l-screen-inset">
  <p>.l-screen-inset</p>
</div>

<p>The final layout is for marginalia, asides, and footnotes.
It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p>

<div class="fake-img l-gutter">
  <p>.l-gutter</p>
</div>

<hr />

<h2 id="other-typography">Other Typography?</h2>

<p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p>

<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>

<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>

<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>

<ol>
  <li>First ordered list item</li>
  <li>Another item
⋅⋅* Unordered sub-list.</li>
  <li>Actual numbers don’t matter, just that it’s a number
⋅⋅1. Ordered sub-list</li>
  <li>And another item.</li>
</ol>

<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>

<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>

<ul>
  <li>Unordered list can use asterisks</li>
  <li>Or minuses</li>
  <li>Or pluses</li>
</ul>

<p><a href="https://www.google.com">I’m an inline-style link</a></p>

<p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p>

<p><a href="https://www.mozilla.org">I’m a reference-style link</a></p>

<p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p>

<p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p>

<p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p>

<p>URLs and URLs in angle brackets will automatically get turned into links. 
http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes 
example.com (but not on Github, for example).</p>

<p>Some text to show that the reference links can follow later.</p>

<p>Here’s our logo (hover to see the title text):</p>

<p>Inline-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1" /></p>

<p>Reference-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2" /></p>

<p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="s">"Python syntax highlighting"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting. 
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div>

<p>Colons can be used to align columns.</p>

<table>
  <thead>
    <tr>
      <th>Tables</th>
      <th style="text-align: center">Are</th>
      <th style="text-align: right">Cool</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>col 3 is</td>
      <td style="text-align: center">right-aligned</td>
      <td style="text-align: right">$1600</td>
    </tr>
    <tr>
      <td>col 2 is</td>
      <td style="text-align: center">centered</td>
      <td style="text-align: right">$12</td>
    </tr>
    <tr>
      <td>zebra stripes</td>
      <td style="text-align: center">are neat</td>
      <td style="text-align: right">$1</td>
    </tr>
  </tbody>
</table>

<p>There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don’t need to make the 
raw Markdown line up prettily. You can also use inline Markdown.</p>

<table>
  <thead>
    <tr>
      <th>Markdown</th>
      <th>Less</th>
      <th>Pretty</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><em>Still</em></td>
      <td><code class="language-plaintext highlighter-rouge">renders</code></td>
      <td><strong>nicely</strong></td>
    </tr>
    <tr>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Blockquotes are very handy in email to emulate reply text.
This line is part of the same quote.</p>
</blockquote>

<p>Quote break.</p>

<blockquote>
  <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>

<p>Here’s a line for us to start with.</p>

<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>

<p>This line is also a separate paragraph, but…
This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://alshedivat.github.io/Wikiweb/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata" /><published>2020-09-28T21:01:00+00:00</published><updated>2020-09-28T21:01:00+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2020/github-metadata</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p>

<h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2>
<ul>
  <li>Propagates the site.github namespace with repository metadata</li>
  <li>Setting site variables :
    <ul>
      <li>site.title</li>
      <li>site.description</li>
      <li>site.url</li>
      <li>site.baseurl</li>
    </ul>
  </li>
  <li>Accessing the metadata - duh.</li>
  <li>Generating edittable links.</li>
</ul>

<h2 id="additional-reading">Additional Reading</h2>
<ul>
  <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li>
  <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li>
  <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata.
<br /></li>
</ul>

<h2 id="example-metadata">Example MetaData</h2>
<ul>
  <li>Host Name :</li>
  <li>URL :</li>
  <li>BaseURL :</li>
  <li>Archived :</li>
  <li>Contributors :</li>
</ul>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://alshedivat.github.io/Wikiweb/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter" /><published>2020-09-28T15:12:00+00:00</published><updated>2020-09-28T15:12:00+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2020/twitter</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p>

<h1 id="tweet">Tweet</h1>
<p>An example of displaying a tweet:</p>
<div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="timeline">Timeline</h1>
<p>An example of pulling from a timeline:</p>
<div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="additional-details">Additional Details</h1>
<p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><category term="formatting" /><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry><entry><title type="html">Algortima Mega Sort Python</title><link href="https://alshedivat.github.io/Wikiweb/blog/2020/news/" rel="alternate" type="text/html" title="Algortima Mega Sort Python" /><published>2020-03-11T16:40:16+00:00</published><updated>2020-03-11T16:40:16+00:00</updated><id>https://alshedivat.github.io/Wikiweb/blog/2020/news</id><content type="html" xml:base="https://alshedivat.github.io/Wikiweb/blog/2020/news/"><![CDATA[<hr />
<h5 id="pengertian">Pengertian</h5>
<p><code class="language-plaintext highlighter-rouge">Mega sort</code> merupakan algoritma pengurutan dalam <a href="https://id.wikipedia.org/wiki/Ilmu_komputer">Ilmu Komputer</a> yang di rancang untuk memenuhi kebutuhan pengurutan atas suatu rangkaian data yang tidak memungkinkan untuk di tampung dalam memory komputer karena jumlahnya terlalu besar. Alogitma ini ditemukan oleh <a href="https://id.wikipedia.org/wiki/Arsitektur_von_Neumann#:~:text=John%20Van%20Neumann%20seorang%20ahli,Inggris%3A%20stored%20program%20concept">Jhon Von Neumann</a> pada tahun 1945. <br /> <br /></p>

<h5 id="algoritma">Algoritma</h5>
<p>Perinsip utama yang diimplementasikan pada algoritma <code class="language-plaintext highlighter-rouge">Merge sort</code> sering kali disebut sebagai <em>Divide and Conquer</em>. Cara kerja algoritam <code class="language-plaintext highlighter-rouge">Merge sort</code> adalah membagi <a href="https://id.wikipedia.org/wiki/Larik">larik</a> yang diberikan menjadi dua bagian yang lebih kecil, kedua larik tersebut akan diurutkan secara terpisah. Setelah kedua buah list tersusun, makan akan dibentuk larik baru sebagai hasil penggabungan dari dua buah larik sebelumnya. Menurut keefektifanya, algoritma ini bekarja dengan tingkat keefektifan <a href="https://id.wikipedia.org/wiki/Notasi_O_besar">O</a>(nlog(n)). Dalam bentuk pseudocode sederhana algoritam ini dijabarkan sebagia berikut:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Original data is on the input tape; the other tapes are blank
</span> <span class="n">function</span> <span class="n">merge_sort</span><span class="p">(</span><span class="n">input_tape</span><span class="p">,</span> <span class="n">output_tape</span><span class="p">,</span> <span class="n">scratch_tape_C</span><span class="p">,</span> <span class="n">scratch_tape_D</span><span class="p">)</span>
     <span class="k">while</span> <span class="nb">any</span> <span class="n">records</span> <span class="n">remain</span> <span class="n">on</span> <span class="n">the</span> <span class="n">input_tape</span>
         <span class="k">while</span> <span class="nb">any</span> <span class="n">records</span> <span class="n">remain</span> <span class="n">on</span> <span class="n">the</span> <span class="n">input_tape</span>
             <span class="n">merge</span><span class="p">(</span> <span class="n">input_tape</span><span class="p">,</span> <span class="n">output_tape</span><span class="p">,</span> <span class="n">scratch_tape_C</span><span class="p">)</span>
             <span class="n">merge</span><span class="p">(</span> <span class="n">input_tape</span><span class="p">,</span> <span class="n">output_tape</span><span class="p">,</span> <span class="n">scratch_tape_D</span><span class="p">)</span>
         <span class="k">while</span> <span class="nb">any</span> <span class="n">records</span> <span class="n">remain</span> <span class="n">on</span> <span class="n">C</span> <span class="ow">or</span> <span class="n">D</span>
             <span class="n">merge</span><span class="p">(</span> <span class="n">scratch_tape_C</span><span class="p">,</span> <span class="n">scratch_tape_D</span><span class="p">,</span> <span class="n">output_tape</span><span class="p">)</span>
             <span class="n">merge</span><span class="p">(</span> <span class="n">scratch_tape_C</span><span class="p">,</span> <span class="n">scratch_tape_D</span><span class="p">,</span> <span class="n">input_tape</span><span class="p">)</span>

 <span class="c1"># take the next sorted chunk from the input tapes, and merge into the single given output_tape.
</span> <span class="c1"># tapes are scanned linearly.
</span> <span class="c1"># tape[next] gives the record currently under the read head of that tape.
</span> <span class="c1"># tape[current] gives the record previously under the read head of that tape.
</span> <span class="c1"># (Generally both tape[current] and tape[previous] are buffered in RAM ...)
</span> <span class="n">function</span> <span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="p">[],</span> <span class="n">right</span><span class="p">[],</span> <span class="n">output_tape</span><span class="p">[])</span>
     <span class="n">do</span>
        <span class="k">if</span> <span class="n">left</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="err">≤</span> <span class="n">right</span><span class="p">[</span><span class="n">current</span><span class="p">]</span>
            <span class="n">append</span> <span class="n">left</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="n">to</span> <span class="n">output_tape</span>
            <span class="n">read</span> <span class="nb">next</span> <span class="n">record</span> <span class="k">from</span> <span class="n">left</span> <span class="n">tape</span>
        <span class="k">else</span>
            <span class="n">append</span> <span class="n">right</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="n">to</span> <span class="n">output_tape</span>
            <span class="n">read</span> <span class="nb">next</span> <span class="n">record</span> <span class="k">from</span> <span class="n">right</span> <span class="n">tape</span>
    <span class="k">while</span> <span class="n">left</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">left</span><span class="p">[</span><span class="nb">next</span><span class="p">]</span> <span class="ow">and</span> <span class="n">right</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">right</span><span class="p">[</span><span class="nb">next</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">left</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">left</span><span class="p">[</span><span class="nb">next</span><span class="p">]</span>
        <span class="n">append</span> <span class="n">current_left_record</span> <span class="n">to</span> <span class="n">output_tape</span>
    <span class="k">if</span> <span class="n">right</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">right</span><span class="p">[</span><span class="nb">next</span><span class="p">]</span>
        <span class="n">append</span> <span class="n">current_right_record</span> <span class="n">to</span> <span class="n">output_tape</span>
    <span class="k">return</span>
</code></pre></div></div>

<p>Contoh penerapan atas sebuah larik sebagai data sumber yang akan diturunkan <strong><em>{3,9,4,1,5,2}</em></strong> adalah sebagai berikut:</p>
<ul>
  <li>Larik tersebuh dibagi menjadi dua bagian,<strong><em>{3,9,4}</em></strong> dan <strong><em>{1,5,2}</em></strong></li>
  <li>Kedua lirik kemudian diurutakan secara terpisah sehingga menjadi <strong><em>{3,9,4}</em></strong> dan <strong><em>{1,5,2}</em></strong></li>
  <li>Sebuah lirik baru dibentuk sebagai penggabung dari kedua lirik tersebut <strong><em>{1}</em></strong>, sementara nilai-nilai dalam masing larik <strong><em>{3,4,9}</em></strong> dan <strong><em>{2,5}</em></strong> (nilai <code class="language-plaintext highlighter-rouge">1</code> dalam elemen larik kedua telah dipindahkan ke larik baru)</li>
  <li>Langkah berikutnya adalah penggabungan dari masing-masing larik ke dalam larik baru yang dibuat sebelumnya.
    <ul>
      <li><strong><em>{1, 2}</em></strong> &lt;-&gt; <strong><em>{3, 4, 9}</em></strong> dan <strong><em>{5}</em></strong></li>
      <li><strong><em>{1, 2, 3}</em></strong> &lt;-&gt; <strong><em>{4, 9}</em></strong> dan <strong><em>{5}</em></strong></li>
      <li><strong><em>{1, 2, 3, 4}</em></strong> &lt;-&gt; <strong><em>{9}</em></strong> dan <strong><em>{5}</em></strong></li>
      <li><strong><em>{1, 2, 3, 4, 5}</em></strong> &lt;-&gt; <strong><em>{9}</em></strong> dan <strong><em>{null}</em></strong></li>
      <li><strong><em>{1, 2, 3, 4, 5, 9}</em></strong> &lt;-&gt; <strong><em>{null}</em></strong> dan <strong><em>{null}</em></strong></li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="Python" /><category term="formatting" /><category term="links" /><summary type="html"><![CDATA[Algorirma pemrograman python]]></summary></entry></feed>